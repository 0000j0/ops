
. ./.env

if [ ! -f ${CONF}.orig ]; then
    cp -p ${CONF} ${CONF}.orig
    mkdir -p ./conf
    cp -p ${CONF}.orig ./conf
fi

FN=`basename ${CONF}`

echo
echo "== ${CONF} =="
{
cat <<__EOL
[DEFAULT]
my_ip = ${HOST}
state_path = /var/lib/nova
enabled_apis = osapi_compute,metadata
log_dir = /var/log/nova
transport_url = rabbit://openstack:${PASS}@${HOST}

use_neutron = True
#linuxnet_interface_driver = nova.network.linux_net.LinuxOVSInterfaceDriver
linuxnet_interface_driver = linuxbridge
firewall_driver = nova.virt.firewall.NoopFirewallDriver
#firewall_driver = iptables
vif_plugging_is_fatal = True
vif_plugging_timeout = 300

[api]
auth_strategy = keystone

[glance]
api_servers = http://${HOST}:9292

[oslo_concurrency]
lock_path = $state_path/tmp

[api_database]
connection = mysql+pymysql://nova:${PASS}@${HOST}/nova_api

[database]
connection = mysql+pymysql://nova:${PASS}@${HOST}/nova

[keystone_authtoken]
auth_uri = http://${HOST}:5000
auth_url = http://${HOST}:35357
memcached_servers = ${HOST}:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = nova
password = ${PASS}

[placement]
auth_url = http://${HOST}:35357
os_region_name = RegionOne
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = placement
password = ${PASS}

[placement_database]
connection = mysql+pymysql://nova:${PASS}@${HOST}/nova_placement

[wsgi]
api_paste_config = /etc/nova/api-paste.ini

[neutron]
url = http://${HOST}:9696
auth_url = http://${HOST}:35357
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = neutron
password = ${PASS}
service_metadata_proxy = True
metadata_proxy_shared_secret = metadata_secret

[vnc]
enabled = True
vncserver_listen = 0.0.0.0
vncserver_proxyclient_address = ${HOST}
novncproxy_base_url = http://${HOST}:6080/vnc_auto.html

__EOL
} | tee ./conf/${FN}

cat ./conf/${FN} > ${CONF}

chmod 640 ${CONF}
chown root:nova ${CONF}

